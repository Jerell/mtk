# Connectors

A system of two pipes, `pipe1` and `pipe2`, would have equations generated by calling `connect` on the ports of the pipes.

```julia
connect(pipe1.outlet, pipe2.inlet)
```

This function uses the `[connect]` metadata on each of the port's variables to generate equations describing the relationship between the connected components.

```julia
@connector function FlowPort(; name, T0=30.0)
    sts = @variables begin
        p(t) = 1.013e5
        (qm(t)=1, [connect = Flow]) # <1>
        T(t)=T0
    end
    ODESystem(Equation[], t, sts, []; name=name)
end
```
1. This is a Flow variable.

Like Modelica, there are `Equality`, `Flow`, and `Stream` variables. @mtkVariableMetadata

- Equality variables connect by making values equal. For example, connecting pins in an electrical circuit makes the voltages equal at the junction.

- Flow variables connect by making the sum zero. For example, connecting pins in an electrical circuit makes the current sum to zero at the junction.

- Stream variables are used for fluids, where variables are determined by the upstream side of the flow. This is useful when you have convective transport of specific quantities, such as specific enthalpy and chemical composition. A stream variable describes a quantity that is carried by a flow variable.

If at least one variable in a connector has the stream prefix, the connector is called [stream connector](https://specification.modelica.org/master/stream-connectors.html) and the corresponding variable is called stream variable. A stream connector must have exactly one variable with the flow prefix. 